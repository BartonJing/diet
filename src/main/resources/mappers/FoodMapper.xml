<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.barton.dao.FoodMapper" >
  <resultMap id="BaseResultMap" type="com.barton.domain.entity.Food" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="field_1" property="field1" jdbcType="VARCHAR" />
    <result column="field_2" property="field2" jdbcType="VARCHAR" />
    <result column="field_3" property="field3" jdbcType="VARCHAR" />
    <result column="field_4" property="field4" jdbcType="VARCHAR" />
    <result column="field_5" property="field5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, name, field_1, field_2, field_3, field_4, field_5
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from d_food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from d_food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.barton.domain.entity.Food" >
    insert into d_food (id, type, name, 
      field_1, field_2, field_3, 
      field_4, field_5)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{field1,jdbcType=VARCHAR}, #{field2,jdbcType=VARCHAR}, #{field3,jdbcType=VARCHAR}, 
      #{field4,jdbcType=VARCHAR}, #{field5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.barton.domain.entity.Food" >
    insert into d_food
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="field1 != null" >
        field_1,
      </if>
      <if test="field2 != null" >
        field_2,
      </if>
      <if test="field3 != null" >
        field_3,
      </if>
      <if test="field4 != null" >
        field_4,
      </if>
      <if test="field5 != null" >
        field_5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="field1 != null" >
        #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null" >
        #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null" >
        #{field3,jdbcType=VARCHAR},
      </if>
      <if test="field4 != null" >
        #{field4,jdbcType=VARCHAR},
      </if>
      <if test="field5 != null" >
        #{field5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.barton.domain.entity.Food" >
    update d_food
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="field1 != null" >
        field_1 = #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null" >
        field_2 = #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null" >
        field_3 = #{field3,jdbcType=VARCHAR},
      </if>
      <if test="field4 != null" >
        field_4 = #{field4,jdbcType=VARCHAR},
      </if>
      <if test="field5 != null" >
        field_5 = #{field5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.barton.domain.entity.Food" >
    update d_food
    set type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      field_1 = #{field1,jdbcType=VARCHAR},
      field_2 = #{field2,jdbcType=VARCHAR},
      field_3 = #{field3,jdbcType=VARCHAR},
      field_4 = #{field4,jdbcType=VARCHAR},
      field_5 = #{field5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>